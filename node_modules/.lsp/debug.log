Hello - from c:\Users\FMF\.vscode\extensions\jaredly.reason-vscode-1.7.13\bin.native.exe.hot.exe
Previous log location: C:\Users\FMF\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/FMF/Documents/domaca-naloga/main.ml","languageId":"ocaml","version":1,"text":"let read_problem filename =\r\n  let channel = open_in filename in\r\n  let str = really_input_string channel (in_channel_length channel) in\r\n  close_in channel;\r\n  Model.problem_of_string str\r\n\r\nlet find_solution problem =\r\n  let before = Sys.time () in\r\n  let solution = Solver.solve_problem problem in\r\n  let after = Sys.time () in\r\n  let elapsed_time = after -. before in\r\n  (solution, elapsed_time)\r\n\r\nlet display_solution = function\r\n  | Some solution ->\r\n      Printf.printf \"Končna rešitev:\\n\";\r\n      Model.print_solution solution\r\n  | None -> Printf.printf \"Rešitev ne obstaja.\\n\"\r\n\r\nlet find_and_display_solution (problem : Model.problem) =\r\n  Printf.printf \"Rešujem:\\n\";\r\n  Model.print_problem problem;\r\n  Printf.printf \"\\n%!\";\r\n  let response, elapsed_time = find_solution problem in\r\n  display_solution response;\r\n  Printf.printf \"Čas reševanja: %f s.\\n%!\" elapsed_time\r\n\r\nlet () =\r\n  (* Če se program sesuje, nam to izpiše klicni sklad. *)\r\n  Printexc.record_backtrace true;\r\n  (* Tabela sistemskih argumentov vsebuje ime klicanega programa ter argumente, ki mu sledijo *)\r\n  Sys.argv\r\n  (* Tabelo pretvorimo v seznam *)\r\n  |> Array.to_list\r\n  (* Odstranimo prvi element (ime klicanega programa), da dobimo seznam imen datotek *)\r\n  |> List.tl\r\n  (* Iz vsake datoteke preberemo problem *)\r\n  |> List.map read_problem\r\n  (* Probleme zaporedoma rešimo *)\r\n  |> List.iter find_and_display_solution\r\n\r\n(* Če domačo nalogo rešujete prek spletnega vmesnika, ki ne podpira branja datotek,\r\n   lahko delovanje preizkušate prek spodnjega programa. *)\r\n\r\n(* let () = \"\r\n┏━━━┯━━━┯━━━┓\r\n┃483│921│657┃\r\n┃967│3 5│821┃\r\n┃251│876│493┃\r\n┠───┼───┼───┨\r\n┃548│132│976┃\r\n┃729│ 64│ 38┃\r\n┃136│798│ 45┃\r\n┠───┼───┼───┨\r\n┃372│689│514┃\r\n┃814│253│769┃\r\n┃695│417│382┃\r\n┗━━━┷━━━┷━━━┛\"\r\n  |> Model.problem_of_string\r\n  |> find_and_display_solution *)\r\n"}}}
